{"version":3,"sources":["utils/API.js","components/NavBar/index.js","components/Table/index.js","components/SearchBar/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","NavBar","className","Table","props","scope","onClick","handleSort","users","map","user","src","picture","large","alt","name","first","last","email","phone","SearchBar","value","searchTerm","onChange","handleInputChange","type","placeholder","App","useState","employeeState","setEmployeeState","setSearchTerm","filteredEmployee","setFilteredEmployee","sortByName","setSortByName","useEffect","API","then","res","console","log","data","results","searchEmployeeName","filterArr","filter","toLowerCase","includes","event","target","sort","a","b","firt","sortedName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAEe,EACI,WACX,OAAOA,IAAMC,IACT,iD,eCcGC,MAhBf,WACE,OACE,qBAAKC,UAAY,SAAjB,SACE,qBAAKA,UAAU,SAAf,SACE,+BACE,qDACA,6EACA,6E,MC4BKC,MAnCf,SAAeC,GAGb,OACE,8BAEE,wBAAOF,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIG,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAMC,QAASF,EAAMG,WAA/B,kBACA,oBAAIF,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGD,EAAMI,MAAMC,KAAI,SAAAC,GAAI,OACnB,+BACE,+BACG,IACD,qBAAKC,IAAKD,EAAKE,QAAQC,MAAOC,IAAI,cAAe,OAEnD,+BACGJ,EAAKK,KAAKC,MADb,IACqBN,EAAKK,KAAKE,QAE/B,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKS,sB,MCPTC,MAnBf,SAAmBhB,GACjB,OACE,qBAAKF,UAAU,qCAAf,SACE,qBAAKA,UAAU,SAAf,SAEE,uBACEmB,MAASjB,EAAMkB,WACfC,SAAYnB,EAAMoB,kBAClBC,KAAK,SACLvB,UAAU,eACVwB,YAAY,8BCkEPC,MAtEf,WAAe,MAE6BC,mBAAS,IAFtC,mBAENC,EAFM,KAESC,EAFT,OAKuBF,mBAAS,IALhC,mBAKNN,EALM,KAKMS,EALN,OAQmCH,mBAAS,IAR5C,mBAQNI,EARM,KAQYC,EARZ,OAUuBL,oBAAS,GAVhC,mBAUNM,EAVM,KAUMC,EAVN,KAabC,qBAAU,WACRC,IAAmBC,MAAK,SAACC,GACvBC,QAAQC,IAAIF,EAAIG,KAAKC,SACrBb,EAAiBS,EAAIG,KAAKC,SAC1BV,EAAoBM,EAAIG,KAAKC,cAE9B,IAEHP,qBAAU,WACJd,GACFsB,MAED,CAACtB,IAGJ,IAAMsB,EAAqB,WACzB,IAAIC,EAAYhB,EAAciB,QAAO,SAACpC,GAAD,OACnCA,EAAKK,KAAKC,MAAM+B,cAAcC,SAAS1B,MACvCW,EAAoBY,IAqBxB,OACE,gCACE,cAAC,EAAD,IAEA,cAAC,EAAD,CACArB,kBAtBsB,SAACyB,GACzBlB,EAAckB,EAAMC,OAAO7B,MAAM0B,eACjCP,QAAQC,IAAIQ,EAAMC,OAAO7B,QAqBvBsB,QAASrB,IAIT,cAAC,EAAD,CACAd,MAAOwB,EACPzB,WAvBW,WAER2B,GAIHJ,EAAiBD,EAAcsB,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAErC,KAAKC,MAAQqC,EAAEtC,KAAKC,OAAU,EAAI,MAClFmB,GAAc,KAJdL,EAAiBD,EAAcsB,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAErC,KAAKuC,KAAOD,EAAEtC,KAAKC,MAAS,GAAK,MACjFmB,GAAc,KAoBdoB,WAAcrB,QC9DLsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4bb717e0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployees : function(){\r\n        return axios.get(\r\n            \"https://randomuser.me/api/?results=40&nat=us\"\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className = \"parent\">\r\n      <nav className=\"navbar\">\r\n        <ul >\r\n          <li> Employee Directory</li>\r\n          <li> Search an employee to filter through table</li>\r\n          <li>\r\n           Click on Name tab to sort employees\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Table(props) {\r\n \r\n\r\n  return (\r\n    <div>\r\n      \r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" >Picture</th>\r\n            <th scope=\"col\" onClick={props.handleSort}  >Name</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">Phone #</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.users.map(user => (\r\n            <tr>\r\n              <td>\r\n                {\" \"}\r\n                <img src={user.picture.large} alt=\"userImage\" />{\" \"}\r\n              </td>\r\n              <td>\r\n                {user.name.first} {user.name.last}\r\n              </td>\r\n              <td>{user.email}</td>\r\n              <td>{user.phone}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <div className=\"d-flex justify-content-center px-5\" >\r\n      <div className=\"search\">\r\n        \r\n        <input\r\n          value = {props.searchTerm}\r\n          onChange = {props.handleInputChange}\r\n          type=\"search\"\r\n          className=\"search-input\"\r\n          placeholder=\"Search Employee Name\"\r\n          \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchBar;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\n\nimport API from \"./utils/API\";\nimport NavBar from \"./components/NavBar\";\nimport Table from \"./components/Table\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  // initialize use state as an array.\n  const [employeeState, setEmployeeState] = useState([]);\n\n  // User input grabbed from search bar\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // filtered employees that match the searchTerm\n  const [filteredEmployee, setFilteredEmployee] = useState([]);\n\n  const [sortByName, setSortByName] = useState(false)\n\n  // Grabs employees from randomuser api and sets into employee and filtered employee states\n  useEffect(() => {\n    API.getEmployees().then((res) => {\n      console.log(res.data.results);\n      setEmployeeState(res.data.results);\n      setFilteredEmployee(res.data.results);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (searchTerm) {\n      searchEmployeeName();\n    }\n  }, [searchTerm]);\n\n  // Filters employees into new array if input contains letters of employees names\n  const searchEmployeeName = () => {\n    let filterArr = employeeState.filter((user) =>\n      user.name.first.toLowerCase().includes(searchTerm));\n      setFilteredEmployee(filterArr);\n  };\n\n  // Grabs input from user input and sets into SearchTerm\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value.toLowerCase());\n    console.log(event.target.value);\n  };\n\n  // Sort name by ascending or descending order\n  const sortBy = () => {\n  \n    if (!sortByName){\n      setEmployeeState(employeeState.sort((a,b) => (a.name.firt > b.name.first) ? 1 : -1));\n      setSortByName(true);\n    } else {\n      setEmployeeState(employeeState.sort((a,b) => (a.name.first > b.name.first) ? -1 : 1))\n      setSortByName(false)\n    }\n  }\n\n  return (\n    <div>\n      <NavBar />\n\n      <SearchBar\n      handleInputChange={handleInputChange} \n      results={searchTerm}\n       />\n      \n    \n      <Table \n      users={filteredEmployee}\n      handleSort ={sortBy}\n      sortedName = {sortByName} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}